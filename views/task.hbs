<div class="row">
    <div class="col-md-12" >
     <button type="button" class="collapsible " >Open Task {{currentIndex}}</button>
     <div class="TaskQ">
       <p >{{currentTask}}</p>
     </div>
    </div>
  </div>
  <br>
  <br>
<div class="row">
    <div class="col-md-7">
      <div>
            <textarea id="code-screen" onchange="onTextChange()">{{content}}</textarea>
      </div>
    </div>
    <div class="col-md-5">
      <div class="panel panel-primary"  >
        <div class="panel-heading ">
          CHAT ROOM
          <span class="pull-right" id="chatbox-username">
            {{#if user}}
              {{user.name}}
            {{/if}}
          </span>
        </div>
        <div class="panel-body fixed-panel"  style="overflow-y: scroll;">
          <ul class="media-list" id="chatboxlistMessages"></ul>
        </div>
        <div class="panel-footer">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Enter message" id="userMessage">
            <span class="input-group-btn" style="color: #333333">
              <button type="submit" class="btn btn-secondary" id="sendBtn" onclick="sendMessage()" >SEND</button>
            </span>
          </div>
        </div>
      </div>
    </div>
</div>

<div class="col-12" style="text-align: center">

  <a href="/newTask">
  <input type="button" value="Next Task" class="btn btn-primary">
</a></div>



<input type="hidden" value="{{roomId}}" id="roomId"/>


<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.25.0/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.25.0/mode/javascript/javascript.min.js"></script>

<script src="/plugins/ot/ot.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>

  var EditorClient = ot.EditorClient;
  var SocketIOAdapter = ot.SocketIOAdapter;
  var CodeMirrorAdapter = ot.CodeMirrorAdapter;

  var socket = io.connect();
  var editor = CodeMirror.fromTextArea(document.getElementById("code-screen"), {
    lineNumbers: true,
    theme: "monokai"
  });
  console.log(document.getElementById("code-screen"))
  function onTextChange() {
    console.log("old val : ")
    console.log(prevVal)
    console.log("current val : ")
    console.log($('#code-screen').val());
  }
  var code = $('#code-screen').val();
  var cmClient;
  function init(str, revision, clients, serverAdapter) {
    if (!code) {
      editor.setValue(str);
    }

    cmClient = window.cmClient = new EditorClient(
      revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
    );
  };

  socket.on('doc', function(obj) {
    prevVal = obj.str
    init(obj.str, obj.revision, obj.clients, new SocketIOAdapter(socket));
  });

  var username = $("#chatbox-username").val();
  if(username === "") {
    var userId = Math.floor(Math.random() * 9999).toString();
    username = "Participant" + userId;
    $("#chatbox-username").text(username);
  };

  var roomId = $('#roomId').val();
  socket.emit('joinRoom', {room: roomId, username: username});

  var userMessage = function(name, text) {
    return ('<li class="media"> <div class="media-body"> <div class="media">' +
      '<div class="media-body"/>' +
      '<b>' + name + '</b> : ' + text +
      '<hr/> </div></div></div></li>'
    );
  };

  var sendMessage = function() {
    var inputMassege= document.getElementById("userMessage");
    inputMassege.addEventListener("sendBtn", function (event) {
      if(event.Keycode == 13){
        document.getElementById('#sendBtn').click();
      }

    });

    var userMessage = $('#userMessage').val();
    socket.emit('chatMessage', {message: userMessage, username: username});
    $('#userMessage').val("");
  };

  socket.on('chatMessage', function(data) {
    $('#chatboxlistMessages').append(userMessage(data.username, data.message));
  });


  var coll = document.getElementsByClassName("collapsible");
  var i;

for (i = 0; i < coll.length; i++) {
  coll[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var TaskQ = this.nextElementSibling;
    if (TaskQ.style.display === "block") {
      TaskQ.style.display = "none";
    } else {
      TaskQ.style.display = "block";
    }
  });
}


</script>
